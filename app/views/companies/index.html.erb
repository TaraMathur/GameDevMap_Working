
<!-- Header -->
<header>
	<script src="https://www.amcharts.com/lib/3/ammap.js"></script>
	<script src="https://www.amcharts.com/lib/3/maps/js/worldLow.js"></script>
	<script src="https://www.amcharts.com/lib/3/plugins/export/export.min.js"></script>
	<link rel="stylesheet" href="https://www.amcharts.com/lib/3/plugins/export/export.css" type="text/css" media="all" />
	<script src="https://www.amcharts.com/lib/3/themes/light.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

</header>

<!-- Javascript -->

<script>

var chartData = <%= convert_to_ammaps_json(@mappoints) %>;

var mapData2 = <%= convert_to_ammaps_json(@mapDatum) %>

var latlong2 = <%= convert_to_ammaps_json(@latLong) %>

// get min and max values
var minBulletSize = 3;
var maxBulletSize = 70;
var min = Infinity;
var max = -Infinity;
for ( var i = 0; i < mapData2.length; i++ ) {
  var value = mapData2[ i ].value;
  if ( value < min ) {
    min = value;
  }
  if ( value > max ) {
    max = value;
  }
}

// it's better to use circle square to show difference between values, not a radius
var maxSquare = maxBulletSize * maxBulletSize * 2 * Math.PI;
var minSquare = minBulletSize * minBulletSize * 2 * Math.PI;

// create circle for each country
var images = [];
for ( var i = 0; i < mapData2.length; i++ ) {
  var dataItem = mapData2[ i ];
  var value = dataItem.value;
  // calculate size of a bubble
  var square = ( value - min ) / ( max - min ) * ( maxSquare - minSquare ) + minSquare;
  if ( square < minSquare ) {
    square = minSquare;
  }
  var size = 5; //Math.sqrt( square / ( Math.PI * 2 ) );
  var id = dataItem.code;

  images.push( {
    "type": "circle",
    "theme": "light",

    "width": size,
    "height": size,
    "color": dataItem.color,
    "longitude": latlong2[ id ].longitude,
    "latitude": latlong2[ id ].latitude,
    "title": dataItem.name,
    "value": value,
    "zoomLevel": 2
  } );
}

// build map
var map = AmCharts.makeChart( "mapdiv", {
  "type": "map",
  "projection": "eckert6",
  "titles": [ {
    "text": "",
    "size": 14
  }, {
    "text": "",
    "size": 11
  } ],
  "areasSettings": {
    "color": "#3CAFF2",
    "unlistedAreasColor": "#3CAFF2",
    "unlistedAreasAlpha": 0.1
  },
  "dataProvider": {
    "map": "worldLow",
    "images": images,
     "getAreasFromMap": false
  },
    "areasSettings": {
    "autoZoom": false,
    "selectedColor": "#3CAFF2",
    "selectable": true
  }, 
  "listeners": [{
    "event": "clickMapObject",
    "method": function(event) {
      clickedMapPoint = event.mapObject.title;
      $.get("/companies/filter_on_map",{clickedMapPoint, clickedMapPoint});
    }
  }]
} );
</script>
      
<!-- HTML   -->

<div id="mapdiv" style="width: 100%; height: 450px;"></div>
<br>
<br>

<div id="searching">
  <div id="search-bar">
    <div class="col-lg-3">
      <%= form_tag(companies_path, method: 'get', id: "search-form", class: "input-group") do %>
        <%= text_field_tag :search, params[:search], class: "form-control",placeholder: "Search" %>
        <span class="input-group-btn">
          <%= submit_tag "Search", class: 'btn btn-primary', value: "search" %>
          <%= submit_tag "Clear", class: 'btn btn-default', value: "clear" %>
        </span>

        <% end %>
    </div> <!-- col-lg-3 -->
  </div> <!-- search-bar -->

<br>
  <div id="filters">
      <%= form_tag(companies_path, method: 'get', id: "filters") do %>
        <%= select_tag :category_id, content_tag(:option,'All Company Types',:value=>"")+options_from_collection_for_select(Category.all, :id, :name), onchange: "triggerSearch(this)" %>

        <%= select_tag :country_id, content_tag(:option,'All Countries',:value=>"")+options_from_collection_for_select(Country.all, :id, :name), onchange: "change_states(this)" %>
        
        <%= select_tag :state_prov_id, content_tag(:option,'All States/Provinces',:value=>"")+options_from_collection_for_select(StateProv.all, :id, :name) %>

        <%= select_tag :city_id, content_tag(:option,'All Cities',:value=>"")+options_from_collection_for_select(City.all, :id, :name), onchange: "filter_on_city(this)" %>
        <%= submit_tag "Reset", class: 'btn btn-default', value: "reset filters" %>
      <% end %>
  </div> <!-- filters -->
</div>


<% if false %>
  <%= form_tag companies_path, method: "get", id: "filter", class: "filter" do %>
    <%= label_tag "Category" %>
    <%= select "company", "country", options_for_select([["United States","United States"],["United Kingdom","United Kingdom"]]), {prompt: 'All'}, onchange: "$('#filter').submit();" %>
  <% end %>
<% end %>

<%=render 'companies/company_table' %>
